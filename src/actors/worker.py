from src.serve.serve import OpenAIClient
from src.config import MODEL_ID, OPENAI_API, OPENAI_KEY

prompts = {
            "extract-content": """
            Проанализируйте текст и выделите только текстовую информацию о работе кандидата.
            Избавься от всех html-тэгов.
            Ответ должен быть в строчку.            
            """,
            "extract-info": """
            Проанализируйте текст и выдели только информацию чем занимался кандидат (его обязаности, ключивые задачи).
            Ответ должен быть в строчку.
            
            Пример:
            Занимался настройкой CI/CD процессов...
            """,
            "summary-content": """
            Суммаризируй текст. 
            Суммаризация должна быть краткой, понятной и содержать ключевые задачи и обязанности. Ответ должен быть в строчку.             
            
            Пример:  
            Занимался настройкой CI/CD процессов, администрированием серверов, управлением контейнерами и мониторингом систем.
            """,
            "classifier-employment": """
            Выделите и перечислите все упомянутые в тексте типы занятости в строгом порядке: полная занятость, частичная занятость, проектная работа, стажировка. Если тип занятости не указан в тексте, пропустите его. Если в тексте не упоминается ни один из известных типов занятости, укажите - .
            
            Возможные типы занятости:  
            - полная занятость  
            - частичная занятость  
            - проектная работа  
            - стажировка  
            
            Ответ должен быть в строчку.
            Пример 1:  
            Текст: полная занятость, частичная занятость, проектная работа, стажировка
            Ответ: полная занятость, частичная занятость, проектная работа, стажировка
            
            Пример 2:  
            Текст: стажировка, проектная работа, частичная занятость
            Ответ: частичная занятость, проектная работа, стажировка                    
            """,
            "classifier-schedule": """
            Выделите и перечислите все упомянутые в тексте графики работы в строгом порядке: полный день, сменный график, гибкий график, удаленная работа. Если график работы не указан в тексте, пропустите его. Если в тексте не упоминается ни один из известных графиков работы, укажите - .
            
            Ответ должен быть в строчку.
            Возможные графики работы:  
            - полный день  
            - сменный график  
            - гибкий график  
            - удаленная работа  
            
            Пример 1:  
            Текст: полный день, гибкий график, удаленная работа
            Ответ: полный день, гибкий график, удаленная работа
            
            Пример 2:  
            Текст: удаленная работа, гибкий график
            Ответ: гибкий график, удаленная работа
            """,
            "classifier-edu": """
            Проанализируйте текст и определите тип образования пользователя. Укажите, имеется ли высшее образование или Образрвание не указано, а также техническое оно или нет. Если невозможно определить информацию об образовании, укажите "Образование не указано".

            Ответ должен быть в строчку.
            Пример 1:  
            Текст: "Окончил Московский государственный технический университет имени Баумана по специальности инженер."  
            Ответ: техническое образование 

            Пример 2:  
            Текст: "Учился в Санкт-Петербургском университете, но не закончил."  
            Ответ: нетехническое образование

            Пример 3:  
            Текст: "Получил степень бакалавра в области компьютерных наук."  
            Ответ: Высшее образование, техническое  

            Пример 4:  
            Текст: "Получил сертификат."  
            Ответ: -  
            """,
            "extract-content":"Ты агент который помогает выделить текст.",
            "extract-vacancy":"""
            Ты агент который помогает выделить самое главное из описания вакансий, обращая внимание на:              
            
            Описание: Какие ожидания, ключивые задачи требуются от кандидата?
            Знание языка: какие языки требуются знать кандидату?
            Образование: какое образование нужно?        
            
            ВАЖНО:
            Избався от всей не нужной информации. Например, даты, название компаний и тд.
            В область "знание языка" должно входить языки естественной речи. Например: Русский — Родной, Английский — C1 — Продвинутый.
            Если о "знание языка" ничего не будет, то пусть будет "Русский — Родной".
            
            В область "образование" выдели какое образование трбуется "Высшее образование" или "Неоконченное высшее образование", а также определись "техническое" или "не техническое".
            Если про образование ничего не говориться, то заполни эту область знаком "-".
                        
            Пример ответа:
            Участие в проектах по разработке и внедрению информационных систем в качестве бизнес/системного-аналитика. Сбор и управление требованиями. Разработка спецификаций и требований на разработку ПО. Сопровождение требований до момента выпуска продукта. Обсуждение требований с командой, решение технических вопросов с разработчиками. Демонстрация разработанной функциональности заказчику (по необходимости). $ Русский — Родной, Английский — C1 — Продвинутый. $ Высшее образование, техническое.            
            
            Ответ должен быть в одну строку (содержания описание, содержания знание языка и содержания образование должны быть разделены $):
            """                  
        }


# TODO: Загрузка переменных окружения


class DataCraft:
    def __init__(self):
        self._setup_model()

    def _setup_model(self):
        try:
            self.client = OpenAIClient(model=MODEL_ID, api_base=OPENAI_API, api_key=OPENAI_KEY)
        except Exception as error:    
            raise ValueError(f"Что-то не так с моделью:\n{error}")
        
    def extractInfo(self, content, task_type):
        """
        Обрабатывает описание кандидата в зависимости от указанной задачи.

        :param content: текст описания для анализа.
        :param task_type: тип задачи.
        :return: результат обработки.
        """
        if not content:
            raise ValueError('Переменная content не была передана. Пожалуйста, добавьте описание.')        
        if task_type not in prompts:
            raise ValueError(f"Неподдерживаемый тип задачи: {task_type}")        
        try:
            system_prompt = prompts[task_type]
            result = self.client.invoke(prompt=system_prompt, content=content)
            return result
        except Exception as error:
            raise ValueError(f"Что-то не так на этапе обработки описания CV:\n{error}")